#!/usr/bin/env python
# *-* coding: utf-8 *-*
"""
/*
 * postsuspendacct <purshottam.tuladhar@nepallink.net> (c) Nepallink Network Pvt. Ltd.
 *
 * This script should not be manually executed. Script will be automationally
 * executed by the cPanel system as root when cPanel account has been suspended.
 *
 * Tested on: Python v2.7.x
 */
"""
from sys import argv, exit
from crypt import crypt
from time import ctime 
from string import Template

class PostSuspendAcct(object):
	def __init__(self):
		self.argv = ''
		self.title = "# GENERATED BY (postsuspendacct) [%s]\n" % ctime()
		self.puppet_resource = ''
	
	def parse_args(self, argv):
		"""
		/*
		 * Store all arguments passed to the script as dict ""
		 */
		"""
		self.argv={'user': argv[1]}				

	def log(self):
		"""
		/*
		 * Write log containing all cPanel data passed
		 * to the script as key=value 
		 */
		"""
		filename = '/var/log/postsuspendacct-%s.log' % self.argv.get('user')
		fileobj = open(filename, 'w');
		fileobj.write(self.title)
		for (key, value) in self.argv.items():
			fileobj.write('%s: %s\n' % (key, value))
		fileobj.close()
		print "[%s] Log saved '%s'" % (ctime(), filename)

	def generate_puppet_resource(self):
		"""
		/*
		 * Generate puppet resource declaration containing
		 * all the resources needed to bring nodes to required state
		 * when cPanel account is suspended.
		 */
		"""
		self.puppet_resource = Template("""
# -- BEGIN "$domain" --
apache::vhost::disable { "$user": }
# -- END "$domain" --
""").safe_substitute({
				"user": self.argv.get('user'),
		})
	
	def create_puppet_manifest(self):
		"""
		/*
		 * Create puppet manifest (.pp) containing resources declartions
		 * for each domain.
		 */
		"""
		filename = '/etc/puppet/manifests/cpanel.d/postsuspendacct/%s.pp' % self.argv.get('user')
		fileobj = open(filename, 'w')				
		fileobj.write(self.title)
		fileobj.write(self.puppet_resource)
		fileobj.close()
		print "[%s] Saved puppet manifest '%s'" % (ctime(), filename)

	def attach_puppet_resource(self):
		"""
		/*
		 * Add puppet resource entry in cpanel.pp manifest,
		 * so that all nodes configured will apply same resource.
		 */
		"""
		filename = '/etc/puppet/manifests/cpanel.pp'
		fileobj = open(filename, 'w')
		fileobj.write(self.title)
		fileobj.write("""\
# THIS PUPPET MANIFEST SHOULD NOT BE MANUALLY EDITTED.
# POSTKILLACCT SCRIPT AUTO GENERATED THESE PUPPET RESOUCES. 
""");
		fileobj.write(self.puppet_resource)
		fileobj.close()
		print "[%s] Added puppet resource entry in '%s'" % (ctime(), filename)

if __name__ == '__main__':
	if len(argv) == 1: print ('Warning: This script should not be manually executed.'); exit(1)

	postsuspendacct = PostSuspendAcct()
	postsuspendacct.parse_args(argv)
	postsuspendacct.log()
	postsuspendacct.generate_puppet_resource()
	postsuspendacct.attach_puppet_resource()
	postsuspendacct.create_puppet_manifest()
